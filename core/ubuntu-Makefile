BUILD_DIR=build
ENTRY_POINT=0xc0001500
NASM=nasm 
GCC=gcc 
LD=ld 
INC_LIB= -I lib/ -I lib/kerneal -I lib/user -I kerneal/ -I device/ -I thread/
ASFLAGS=-f elf 
#-Wstrict-prototypes 函数声明必须要有参数类型
#-fno-builtin 不要用内建函数
#-Wmissing-prototypes 函数必须要有声明
CFLAGS=-Wall $(INC_LIB) -c -fno-builtin -W -Wstrict-prototypes \
	   -Wmissing-prototypes -fno-stack-protector
LDFLAGS=-Ttext $(ENTRY_POINT) -e main -Map $(BUILD_DIR)/kerneal.map 

OBJS=$(BUILD_DIR)/main.o $(BUILD_DIR)/init.o $(BUILD_DIR)/interrupt.o \
		$(BUILD_DIR)/timer.o $(BUILD_DIR)/kerneal.o $(BUILD_DIR)/print.o \
		$(BUILD_DIR)/debug.o $(BUILD_DIR)/memory.o  $(BUILD_DIR)/bitmap.o \
		$(BUILD_DIR)/string.o $(BUILD_DIR)/thread.o  $(BUILD_DIR)/list.o $(BUILD_DIR)/switch.o \
		$(BUILD_DIR)/console.o $(BUILD_DIR)/sync.o

#头文件路径
#include "thread.h" thread/thread.h
#include "stdint.h" lib/stdint.h 
#include "string.h" lib/string.h
#include "global.h" kerneal/global.h 
#include "memory.h" kerneal/memory.h 
#include "debug.h" kerneal/debug.h
#include "list.h" lib/kerneal/list.h
#include "interrupt.h" kerneal/interrupt.h
#include "sync.h" thread/sync.h
#include "console.h" device/console.h 
#include "print.h" lib/kerneal/print.h



$(BUILD_DIR)/console.o: device/console.c device/console.h  lib/kerneal/print.h thread/sync.h thread/thread.h
	$(CC) $(CFLAGS) $< -o $@
#c 代码编译
$(BUILD_DIR)/sync.o : thread/sync.c thread/sync.h lib/kerneal/list.h kerneal/global.h kerneal/debug.h kerneal/interrupt.h
	$(CC) $(CFLAGS) $< -o $@
	
$(BUILD_DIR)/list.o: lib/kerneal/list.c lib/kerneal/list.h kerneal/interrupt.h lib/stdint.h 
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/thread.o: thread/thread.c thread/thread.h\
	lib/stdint.h lib/string.h kerneal/global.h kerneal/memory.h lib/kerneal/list.h kerneal/debug.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/memory.o : kerneal/memory.c kerneal/memory.h  lib/stdint.h lib/kerneal/print.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/bitmap.o: lib/kerneal/bitmap.c lib/kerneal/bitmap.h  lib/kerneal/print.h  \
			kerneal/interrupt.h kerneal/debug.h lib/string.h \
			kerneal/global.h lib/stdint.h 
	$(CC) $(CFLAGS) $< -o $@
	
$(BUILD_DIR)/string.o: lib/string.c lib/string.h lib/stdint.h kerneal/global.h \
	lib/stdint.h kerneal/debug.h
	$(CC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/main.o :kerneal/main.c lib/kerneal/print.h \
	lib/stdint.h kerneal/init.h   kerneal/debug.h
	$(GCC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/init.o:kerneal/init.c kerneal/init.h lib/kerneal/print.h \
	lib/stdint.h kerneal/interrupt.h device/timer.h thread/thread.h
	$(GCC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/interrupt.o: kerneal/interrupt.c kerneal/interrupt.h \
	lib/stdint.h kerneal/global.h lib/kerneal/io.h lib/kerneal/print.h kerneal/debug.h
	$(GCC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/timer.o : device/timer.c device/timer.h lib/stdint.h \
	lib/kerneal/io.h lib/kerneal/print.h 
	$(GCC) $(CFLAGS) $< -o $@

$(BUILD_DIR)/debug.o : kerneal/debug.c kerneal/debug.h \
	lib/kerneal/print.h lib/stdint.h kerneal/interrupt.h 
	$(GCC) $(CFLAGS) $< -o $@


#汇编代码编译

$(BUILD_DIR)/kerneal.o : kerneal/kerneal.asm
	$(NASM) $(ASFLAGS) $< -o $@

$(BUILD_DIR)/print.o : lib/kerneal/print.asm
	$(NASM) $(ASFLAGS) $< -o $@

$(BUILD_DIR)/switch.o: thread/switch.asm
	$(NASM) $(ASFLAGS) $< -o $@

#链接
$(BUILD_DIR)/kerneal.bin : $(OBJS)
	$(LD) $(LDFLAGS) $^ -o $@

.PHONY: mk_dir go 

mk_dir:
	if([[! -d $(BUILD_DIR)]]);then mkdir $(BUILD_DIR) ;fi 

go:$(BUILD_DIR)/kerneal.bin 
	echo "go"
	